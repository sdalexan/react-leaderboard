00ce2ae4f96e8812ad20bdeb9feeeafc
jest.mock('axios');

const axios = require('axios');

class Students {
  static all() {
    return axios.get('../data/students-scoress.json').then(resp => resp.data);
  }

}

class Classes {
  static async all() {
    let res = await axios.get('../data/class-scores.json').then(resp => resp.data);
    return res;
  }

}

class Schools {
  static async all() {
    let res = await axios.get('../data/school-scores.json').then(resp => resp.data);
    return res;
  }

}

test('Should fetch Students', () => {
  const students = [{
    "school_name": "state central",
    "name": "alyce fischer",
    "score": 995,
    "class_name": 2
  }];
  const resp = {
    data: students
  };
  axios.get.mockResolvedValue(resp);
  return Students.all().then(data => expect(resp.data).toEqual(students));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2UudGVzdC5qcyJdLCJuYW1lcyI6WyJqZXN0IiwibW9jayIsImF4aW9zIiwicmVxdWlyZSIsIlN0dWRlbnRzIiwiYWxsIiwiZ2V0IiwidGhlbiIsInJlc3AiLCJkYXRhIiwiQ2xhc3NlcyIsInJlcyIsIlNjaG9vbHMiLCJ0ZXN0Iiwic3R1ZGVudHMiLCJtb2NrUmVzb2x2ZWRWYWx1ZSIsImV4cGVjdCIsInRvRXF1YWwiXSwibWFwcGluZ3MiOiJBQXFCQUEsSUFBSSxDQUFDQyxJQUFMLENBQVUsT0FBVjs7QUFyQkEsTUFBTUMsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFFQSxNQUFNQyxRQUFOLENBQWU7QUFDWCxTQUFPQyxHQUFQLEdBQWE7QUFDVCxXQUFPSCxLQUFLLENBQUNJLEdBQU4sQ0FBVSwrQkFBVixFQUEyQ0MsSUFBM0MsQ0FBZ0RDLElBQUksSUFBSUEsSUFBSSxDQUFDQyxJQUE3RCxDQUFQO0FBQ0Y7O0FBSFM7O0FBTWYsTUFBTUMsT0FBTixDQUFjO0FBQ1YsZUFBYUwsR0FBYixHQUFtQjtBQUNoQixRQUFJTSxHQUFHLEdBQUcsTUFBTVQsS0FBSyxDQUFDSSxHQUFOLENBQVUsMkJBQVYsRUFBdUNDLElBQXZDLENBQTRDQyxJQUFJLElBQUlBLElBQUksQ0FBQ0MsSUFBekQsQ0FBaEI7QUFDQSxXQUFPRSxHQUFQO0FBQ0Q7O0FBSlE7O0FBTWQsTUFBTUMsT0FBTixDQUFjO0FBQ1YsZUFBYVAsR0FBYixHQUFtQjtBQUNoQixRQUFJTSxHQUFHLEdBQUcsTUFBTVQsS0FBSyxDQUFDSSxHQUFOLENBQVUsNEJBQVYsRUFBd0NDLElBQXhDLENBQTZDQyxJQUFJLElBQUlBLElBQUksQ0FBQ0MsSUFBMUQsQ0FBaEI7QUFDQSxXQUFPRSxHQUFQO0FBQ0Q7O0FBSlE7O0FBU2RFLElBQUksQ0FBQyx1QkFBRCxFQUEwQixNQUFNO0FBQ2hDLFFBQU1DLFFBQVEsR0FBRyxDQUFDO0FBQ2QsbUJBQWUsZUFERDtBQUVkLFlBQVEsZUFGTTtBQUdkLGFBQVMsR0FISztBQUlkLGtCQUFjO0FBSkEsR0FBRCxDQUFqQjtBQU9BLFFBQU1OLElBQUksR0FBRztBQUFFQyxJQUFBQSxJQUFJLEVBQUdLO0FBQVQsR0FBYjtBQUNBWixFQUFBQSxLQUFLLENBQUNJLEdBQU4sQ0FBVVMsaUJBQVYsQ0FBNEJQLElBQTVCO0FBRUEsU0FBT0osUUFBUSxDQUFDQyxHQUFULEdBQWVFLElBQWYsQ0FBb0JFLElBQUksSUFBSU8sTUFBTSxDQUFDUixJQUFJLENBQUNDLElBQU4sQ0FBTixDQUFrQlEsT0FBbEIsQ0FBMEJILFFBQTFCLENBQTVCLENBQVA7QUFDSCxDQVpHLENBQUoiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7XG5cbmNsYXNzIFN0dWRlbnRzIHtcbiAgICBzdGF0aWMgYWxsKCkge1xuICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCcuLi9kYXRhL3N0dWRlbnRzLXNjb3Jlc3MuanNvbicpLnRoZW4ocmVzcCA9PiByZXNwLmRhdGEpO1xuICAgICB9XG59XG5cbmNsYXNzIENsYXNzZXMge1xuICAgIHN0YXRpYyBhc3luYyBhbGwoKSB7XG4gICAgICAgbGV0IHJlcyA9IGF3YWl0IGF4aW9zLmdldCgnLi4vZGF0YS9jbGFzcy1zY29yZXMuanNvbicpLnRoZW4ocmVzcCA9PiByZXNwLmRhdGEpO1xuICAgICAgIHJldHVybiByZXM7XG4gICAgIH1cbn1cbmNsYXNzIFNjaG9vbHMge1xuICAgIHN0YXRpYyBhc3luYyBhbGwoKSB7XG4gICAgICAgbGV0IHJlcyA9IGF3YWl0IGF4aW9zLmdldCgnLi4vZGF0YS9zY2hvb2wtc2NvcmVzLmpzb24nKS50aGVuKHJlc3AgPT4gcmVzcC5kYXRhKTtcbiAgICAgICByZXR1cm4gcmVzO1xuICAgICB9XG59XG5cbmplc3QubW9jaygnYXhpb3MnKTtcblxudGVzdCgnU2hvdWxkIGZldGNoIFN0dWRlbnRzJywgKCkgPT4ge1xuICAgIGNvbnN0IHN0dWRlbnRzID0gW3tcbiAgICAgICAgXCJzY2hvb2xfbmFtZVwiOiBcInN0YXRlIGNlbnRyYWxcIixcbiAgICAgICAgXCJuYW1lXCI6IFwiYWx5Y2UgZmlzY2hlclwiLFxuICAgICAgICBcInNjb3JlXCI6IDk5NSxcbiAgICAgICAgXCJjbGFzc19uYW1lXCI6IDJcbiAgICB9XTtcblxuICAgIGNvbnN0IHJlc3AgPSB7IGRhdGEgOiBzdHVkZW50cyB9O1xuICAgIGF4aW9zLmdldC5tb2NrUmVzb2x2ZWRWYWx1ZShyZXNwKTtcblxuICAgIHJldHVybiBTdHVkZW50cy5hbGwoKS50aGVuKGRhdGEgPT4gZXhwZWN0KHJlc3AuZGF0YSkudG9FcXVhbChzdHVkZW50cykpO1xufSk7XG5cbiJdfQ==