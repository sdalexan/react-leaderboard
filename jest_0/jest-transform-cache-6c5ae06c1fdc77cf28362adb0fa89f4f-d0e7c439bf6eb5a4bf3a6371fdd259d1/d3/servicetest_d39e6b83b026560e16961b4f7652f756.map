{"version":3,"sources":["service.test.js"],"names":["myDataSource","describe","it","expect","Array","isArray","toEqual","forEach","dataPoint","Object","keys","sort","school_name","name","score","class_name"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,8BAAzB;AAEAC,QAAQ,CAAC,mBAAD,EAAsB,MAAM;AAClCC,EAAAA,EAAE,CAAC,iEAAD,EAAoE,MAAM;AAC1EC,IAAAA,MAAM,CAACC,KAAK,CAACC,OAAN,CAAcL,YAAd,CAAD,CAAN,CAAoCM,OAApC,CAA4C,IAA5C;AACAN,IAAAA,YAAY,CAACO,OAAb,CAAsBC,SAAD,IAAe;AAClC;AACAL,MAAAA,MAAM,CAAC,OAAOK,SAAR,CAAN,CAAyBF,OAAzB,CAAiC,QAAjC;AACAH,MAAAA,MAAM,CAACM,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,IAAvB,EAAD,CAAN,CAAsCL,OAAtC,CAA8C,CAC5C,aAD4C,EAE5C,MAF4C,EAG5C,OAH4C,EAI5C,YAJ4C,CAA9C,EAHkC,CAUlC;;AACAH,MAAAA,MAAM,CAAC,OAAOK,SAAS,CAACI,WAAlB,CAAN,CAAqCN,OAArC,CAA6C,QAA7C;AACAH,MAAAA,MAAM,CAAC,OAAOK,SAAS,CAACK,IAAlB,CAAN,CAA8BP,OAA9B,CAAsC,QAAtC;AACAH,MAAAA,MAAM,CAAC,OAAOK,SAAS,CAACM,KAAlB,CAAN,CAA+BR,OAA/B,CAAuC,QAAvC;AACAH,MAAAA,MAAM,CAAC,OAAOK,SAAS,CAACO,UAAlB,CAAN,CAAoCT,OAApC,CAA4C,QAA5C;AACD,KAfD;AAgBD,GAlBC,CAAF;AAmBD,CApBO,CAAR","sourcesContent":["import myDataSource from '../data/students-scores.json';\n \ndescribe('myDataSource.json', () => {\n  it('Should contain an array of objects matching the intended shape.', () => {\n    expect(Array.isArray(myDataSource)).toEqual(true);\n    myDataSource.forEach((dataPoint) => {\n      // Ensure each data point is an object with an exact set of keys.\n      expect(typeof dataPoint).toEqual('object');\n      expect(Object.keys(dataPoint).sort()).toEqual([\n        'school_name',\n        'name',\n        'score',\n        'class_name',\n      ]);\n \n      // Validate simple property types.\n      expect(typeof dataPoint.school_name).toEqual('string');\n      expect(typeof dataPoint.name).toEqual('string');\n      expect(typeof dataPoint.score).toEqual('number');\n      expect(typeof dataPoint.class_name).toEqual('string');\n    });\n  });\n});\n"]}