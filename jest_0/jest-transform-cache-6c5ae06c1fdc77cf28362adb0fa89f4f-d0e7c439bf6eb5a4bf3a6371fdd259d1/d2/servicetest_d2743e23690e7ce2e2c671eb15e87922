291036ed663fe40e627c3a83349af136
jest.mock('axios');

const axios = require('axios');

class Students {
  static all() {
    return axios.get('../data/students-scoressss.json').then(resp => resp.data);
  }

}

class Classes {
  static async all() {
    let res = await axios.get('../data/class-scores.json').then(resp => resp.data);
    return res;
  }

}

class Schools {
  static async all() {
    let res = await axios.get('../data/school-scores.json').then(resp => resp.data);
    return res;
  }

}

test('Should fetch Students', () => {
  const students = [{
    "school_name": "state central",
    "name": "alyce fischer",
    "score": 995,
    "class_name": 1
  }];
  const resp = {
    data: students
  };
  axios.get.mockResolvedValue(resp);
  return Students.all().then(data => expect(data).toEqual(students));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2UudGVzdC5qcyJdLCJuYW1lcyI6WyJqZXN0IiwibW9jayIsImF4aW9zIiwicmVxdWlyZSIsIlN0dWRlbnRzIiwiYWxsIiwiZ2V0IiwidGhlbiIsInJlc3AiLCJkYXRhIiwiQ2xhc3NlcyIsInJlcyIsIlNjaG9vbHMiLCJ0ZXN0Iiwic3R1ZGVudHMiLCJtb2NrUmVzb2x2ZWRWYWx1ZSIsImV4cGVjdCIsInRvRXF1YWwiXSwibWFwcGluZ3MiOiJBQXFCQUEsSUFBSSxDQUFDQyxJQUFMLENBQVUsT0FBVjs7QUFyQkEsTUFBTUMsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFFQSxNQUFNQyxRQUFOLENBQWU7QUFDWCxTQUFPQyxHQUFQLEdBQWE7QUFDVCxXQUFPSCxLQUFLLENBQUNJLEdBQU4sQ0FBVSxpQ0FBVixFQUE2Q0MsSUFBN0MsQ0FBa0RDLElBQUksSUFBSUEsSUFBSSxDQUFDQyxJQUEvRCxDQUFQO0FBQ0Y7O0FBSFM7O0FBTWYsTUFBTUMsT0FBTixDQUFjO0FBQ1YsZUFBYUwsR0FBYixHQUFtQjtBQUNoQixRQUFJTSxHQUFHLEdBQUcsTUFBTVQsS0FBSyxDQUFDSSxHQUFOLENBQVUsMkJBQVYsRUFBdUNDLElBQXZDLENBQTRDQyxJQUFJLElBQUlBLElBQUksQ0FBQ0MsSUFBekQsQ0FBaEI7QUFDQSxXQUFPRSxHQUFQO0FBQ0Q7O0FBSlE7O0FBTWQsTUFBTUMsT0FBTixDQUFjO0FBQ1YsZUFBYVAsR0FBYixHQUFtQjtBQUNoQixRQUFJTSxHQUFHLEdBQUcsTUFBTVQsS0FBSyxDQUFDSSxHQUFOLENBQVUsNEJBQVYsRUFBd0NDLElBQXhDLENBQTZDQyxJQUFJLElBQUlBLElBQUksQ0FBQ0MsSUFBMUQsQ0FBaEI7QUFDQSxXQUFPRSxHQUFQO0FBQ0Q7O0FBSlE7O0FBU2RFLElBQUksQ0FBQyx1QkFBRCxFQUEwQixNQUFNO0FBQ2hDLFFBQU1DLFFBQVEsR0FBRyxDQUFDO0FBQ2QsbUJBQWUsZUFERDtBQUVkLFlBQVEsZUFGTTtBQUdkLGFBQVMsR0FISztBQUlkLGtCQUFjO0FBSkEsR0FBRCxDQUFqQjtBQU9BLFFBQU1OLElBQUksR0FBRztBQUFFQyxJQUFBQSxJQUFJLEVBQUdLO0FBQVQsR0FBYjtBQUNBWixFQUFBQSxLQUFLLENBQUNJLEdBQU4sQ0FBVVMsaUJBQVYsQ0FBNEJQLElBQTVCO0FBRUEsU0FBT0osUUFBUSxDQUFDQyxHQUFULEdBQWVFLElBQWYsQ0FBb0JFLElBQUksSUFBSU8sTUFBTSxDQUFDUCxJQUFELENBQU4sQ0FBYVEsT0FBYixDQUFxQkgsUUFBckIsQ0FBNUIsQ0FBUDtBQUNILENBWkcsQ0FBSiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTtcblxuY2xhc3MgU3R1ZGVudHMge1xuICAgIHN0YXRpYyBhbGwoKSB7XG4gICAgICAgIHJldHVybiBheGlvcy5nZXQoJy4uL2RhdGEvc3R1ZGVudHMtc2NvcmVzc3NzLmpzb24nKS50aGVuKHJlc3AgPT4gcmVzcC5kYXRhKTtcbiAgICAgfVxufVxuXG5jbGFzcyBDbGFzc2VzIHtcbiAgICBzdGF0aWMgYXN5bmMgYWxsKCkge1xuICAgICAgIGxldCByZXMgPSBhd2FpdCBheGlvcy5nZXQoJy4uL2RhdGEvY2xhc3Mtc2NvcmVzLmpzb24nKS50aGVuKHJlc3AgPT4gcmVzcC5kYXRhKTtcbiAgICAgICByZXR1cm4gcmVzO1xuICAgICB9XG59XG5jbGFzcyBTY2hvb2xzIHtcbiAgICBzdGF0aWMgYXN5bmMgYWxsKCkge1xuICAgICAgIGxldCByZXMgPSBhd2FpdCBheGlvcy5nZXQoJy4uL2RhdGEvc2Nob29sLXNjb3Jlcy5qc29uJykudGhlbihyZXNwID0+IHJlc3AuZGF0YSk7XG4gICAgICAgcmV0dXJuIHJlcztcbiAgICAgfVxufVxuXG5qZXN0Lm1vY2soJ2F4aW9zJyk7XG5cbnRlc3QoJ1Nob3VsZCBmZXRjaCBTdHVkZW50cycsICgpID0+IHtcbiAgICBjb25zdCBzdHVkZW50cyA9IFt7XG4gICAgICAgIFwic2Nob29sX25hbWVcIjogXCJzdGF0ZSBjZW50cmFsXCIsXG4gICAgICAgIFwibmFtZVwiOiBcImFseWNlIGZpc2NoZXJcIixcbiAgICAgICAgXCJzY29yZVwiOiA5OTUsXG4gICAgICAgIFwiY2xhc3NfbmFtZVwiOiAxXG4gICAgfV07XG5cbiAgICBjb25zdCByZXNwID0geyBkYXRhIDogc3R1ZGVudHMgfTtcbiAgICBheGlvcy5nZXQubW9ja1Jlc29sdmVkVmFsdWUocmVzcCk7XG5cbiAgICByZXR1cm4gU3R1ZGVudHMuYWxsKCkudGhlbihkYXRhID0+IGV4cGVjdChkYXRhKS50b0VxdWFsKHN0dWRlbnRzKSk7XG59KTtcblxuIl19