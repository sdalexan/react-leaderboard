9aa6653dc031c303d18e5123981da7ad
jest.mock('axios');

const axios = require('axios');

class Students {
  static async all() {
    return await axios.get('../data/students-scoress.json').then(resp => res.data);
  }

}

class Classes {
  static async all() {
    let res = await axios.get('../data/class-scores.json').then(resp => resp.data);
    return res;
  }

}

class Schools {
  static async all() {
    let res = await axios.get('../data/school-scores.json').then(resp => resp.data);
    return res;
  }

}

test('Should fetch Students', () => {
  const students = [{
    "school_name": "state central",
    "name": "alyce fischer",
    "score": 995,
    "class_name": 1
  }];
  const resp = {
    data: students
  };
  axios.get.mockResolvedValue(resp);
  return Students.all().then(data => expect(data).toEqual(students));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2UudGVzdC5qcyJdLCJuYW1lcyI6WyJqZXN0IiwibW9jayIsImF4aW9zIiwicmVxdWlyZSIsIlN0dWRlbnRzIiwiYWxsIiwiZ2V0IiwidGhlbiIsInJlc3AiLCJyZXMiLCJkYXRhIiwiQ2xhc3NlcyIsIlNjaG9vbHMiLCJ0ZXN0Iiwic3R1ZGVudHMiLCJtb2NrUmVzb2x2ZWRWYWx1ZSIsImV4cGVjdCIsInRvRXF1YWwiXSwibWFwcGluZ3MiOiJBQXFCQUEsSUFBSSxDQUFDQyxJQUFMLENBQVUsT0FBVjs7QUFyQkEsTUFBTUMsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFFQSxNQUFNQyxRQUFOLENBQWU7QUFDWCxlQUFhQyxHQUFiLEdBQW1CO0FBQ2hCLFdBQU8sTUFBTUgsS0FBSyxDQUFDSSxHQUFOLENBQVUsK0JBQVYsRUFBMkNDLElBQTNDLENBQWdEQyxJQUFJLElBQUlDLEdBQUcsQ0FBQ0MsSUFBNUQsQ0FBYjtBQUNEOztBQUhTOztBQU1mLE1BQU1DLE9BQU4sQ0FBYztBQUNWLGVBQWFOLEdBQWIsR0FBbUI7QUFDaEIsUUFBSUksR0FBRyxHQUFHLE1BQU1QLEtBQUssQ0FBQ0ksR0FBTixDQUFVLDJCQUFWLEVBQXVDQyxJQUF2QyxDQUE0Q0MsSUFBSSxJQUFJQSxJQUFJLENBQUNFLElBQXpELENBQWhCO0FBQ0EsV0FBT0QsR0FBUDtBQUNEOztBQUpROztBQU1kLE1BQU1HLE9BQU4sQ0FBYztBQUNWLGVBQWFQLEdBQWIsR0FBbUI7QUFDaEIsUUFBSUksR0FBRyxHQUFHLE1BQU1QLEtBQUssQ0FBQ0ksR0FBTixDQUFVLDRCQUFWLEVBQXdDQyxJQUF4QyxDQUE2Q0MsSUFBSSxJQUFJQSxJQUFJLENBQUNFLElBQTFELENBQWhCO0FBQ0EsV0FBT0QsR0FBUDtBQUNEOztBQUpROztBQVNkSSxJQUFJLENBQUMsdUJBQUQsRUFBMEIsTUFBTTtBQUNoQyxRQUFNQyxRQUFRLEdBQUcsQ0FBQztBQUNkLG1CQUFlLGVBREQ7QUFFZCxZQUFRLGVBRk07QUFHZCxhQUFTLEdBSEs7QUFJZCxrQkFBYztBQUpBLEdBQUQsQ0FBakI7QUFPQSxRQUFNTixJQUFJLEdBQUc7QUFBRUUsSUFBQUEsSUFBSSxFQUFHSTtBQUFULEdBQWI7QUFFQVosRUFBQUEsS0FBSyxDQUFDSSxHQUFOLENBQVVTLGlCQUFWLENBQTRCUCxJQUE1QjtBQUVBLFNBQU9KLFFBQVEsQ0FBQ0MsR0FBVCxHQUFlRSxJQUFmLENBQW9CRyxJQUFJLElBQUlNLE1BQU0sQ0FBQ04sSUFBRCxDQUFOLENBQWFPLE9BQWIsQ0FBcUJILFFBQXJCLENBQTVCLENBQVA7QUFDSCxDQWJHLENBQUoiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7XG5cbmNsYXNzIFN0dWRlbnRzIHtcbiAgICBzdGF0aWMgYXN5bmMgYWxsKCkge1xuICAgICAgIHJldHVybiBhd2FpdCBheGlvcy5nZXQoJy4uL2RhdGEvc3R1ZGVudHMtc2NvcmVzcy5qc29uJykudGhlbihyZXNwID0+IHJlcy5kYXRhKTtcbiAgICAgfVxufVxuXG5jbGFzcyBDbGFzc2VzIHtcbiAgICBzdGF0aWMgYXN5bmMgYWxsKCkge1xuICAgICAgIGxldCByZXMgPSBhd2FpdCBheGlvcy5nZXQoJy4uL2RhdGEvY2xhc3Mtc2NvcmVzLmpzb24nKS50aGVuKHJlc3AgPT4gcmVzcC5kYXRhKTtcbiAgICAgICByZXR1cm4gcmVzO1xuICAgICB9XG59XG5jbGFzcyBTY2hvb2xzIHtcbiAgICBzdGF0aWMgYXN5bmMgYWxsKCkge1xuICAgICAgIGxldCByZXMgPSBhd2FpdCBheGlvcy5nZXQoJy4uL2RhdGEvc2Nob29sLXNjb3Jlcy5qc29uJykudGhlbihyZXNwID0+IHJlc3AuZGF0YSk7XG4gICAgICAgcmV0dXJuIHJlcztcbiAgICAgfVxufVxuXG5qZXN0Lm1vY2soJ2F4aW9zJyk7XG5cbnRlc3QoJ1Nob3VsZCBmZXRjaCBTdHVkZW50cycsICgpID0+IHtcbiAgICBjb25zdCBzdHVkZW50cyA9IFt7XG4gICAgICAgIFwic2Nob29sX25hbWVcIjogXCJzdGF0ZSBjZW50cmFsXCIsXG4gICAgICAgIFwibmFtZVwiOiBcImFseWNlIGZpc2NoZXJcIixcbiAgICAgICAgXCJzY29yZVwiOiA5OTUsXG4gICAgICAgIFwiY2xhc3NfbmFtZVwiOiAxXG4gICAgfV07XG5cbiAgICBjb25zdCByZXNwID0geyBkYXRhIDogc3R1ZGVudHMgfTtcblxuICAgIGF4aW9zLmdldC5tb2NrUmVzb2x2ZWRWYWx1ZShyZXNwKTtcblxuICAgIHJldHVybiBTdHVkZW50cy5hbGwoKS50aGVuKGRhdGEgPT4gZXhwZWN0KGRhdGEpLnRvRXF1YWwoc3R1ZGVudHMpKTtcbn0pO1xuXG4iXX0=